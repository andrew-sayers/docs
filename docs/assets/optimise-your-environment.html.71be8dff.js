import{_ as t,r,o as i,a as c,b as e,d as o,F as l,c as a,e as s}from"./app.19597ffa.js";const p={},u=a('<h1 id="optimise-your-environment" tabindex="-1"><a class="header-anchor" href="#optimise-your-environment" aria-hidden="true">#</a> Optimise your environment</h1><p>This page presents ways to configure your environment that have proved useful in practice. These aren&#39;t requirements, but it&#39;s useful to at least think how you&#39;d solve the problems discussed here. That&#39;s especially true if you want to do operations work, where simple mis-clicks can cause problems for users.</p><h2 id="git-repositories" tabindex="-1"><a class="header-anchor" href="#git-repositories" aria-hidden="true">#</a> Git repositories</h2><p>You will often need to <em>pull</em> changes from canonical <code>sleepdiary</code> repositories, <em>push</em> them to your personal repositories, then create pull requests back to the canonical repository. You might need the ability to push directly to <code>sleepdiary</code> repositories if you do operations work, but that should only ever be a last resort.</p>',4),d=s("One good solution is to configure multiple "),h={href:"https://git-scm.com/docs/git-remote",target:"_blank",rel:"noopener noreferrer"},m=s("remote repositories"),b=s(" and use the "),g={href:"https://git-scm.com/docs/git-config#Documentation/git-config.txt-remoteltnamegtpushurl",target:"_blank",rel:"noopener noreferrer"},_=e("code",null,"remote.<name>.pushurl",-1),f=s(" config option to pull changes from the canonical repository and push them to your local repository. Here's how you might do that on a command-line:"),k=a(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token assign-left variable">USER_NAME</span><span class="token operator">=</span><span class="token operator">&lt;</span>your-github-account-name<span class="token operator">&gt;</span>
<span class="token assign-left variable">REPO_NAME</span><span class="token operator">=</span><span class="token operator">&lt;</span>name-of-the-current-repository<span class="token operator">&gt;</span>

<span class="token comment"># By default, pull from sleepdiary and push to your local branch:</span>
<span class="token function">git</span> remote set-url origin        git@github.com:sleepdiary/<span class="token variable">$REPO_NAME</span>.git
<span class="token function">git</span> remote set-url origin --push git@github.com:<span class="token variable">$USER_NAME</span>/<span class="token variable">$REPO_NAME</span>.git

<span class="token comment"># Alternative repos should be named such that tab-completion</span>
<span class="token comment"># won&#39;t turn a typo into a valid push command to the wrong repository:</span>
<span class="token function">git</span> remote <span class="token function">add</span>   safe-personal  git@github.com:<span class="token variable">$USER_NAME</span>/<span class="token variable">$REPO_NAME</span>.git
<span class="token function">git</span> remote <span class="token function">add</span> unsafe-canonical git@github.com:sleepdiary/<span class="token variable">$REPO_NAME</span>.git

<span class="token comment"># create a group of remotes, so you can do \`git pull -j2 common\`:</span>
<span class="token function">git</span> config remotes.common <span class="token string">&quot;safe-personal origin unsafe-canonical&quot;</span>

<span class="token comment"># Disable pushing to the built branch:</span>
<span class="token function">git</span> config branch.built.remote origin
<span class="token function">git</span> config branch.built.pushRemote <span class="token string">&quot;If you really want to push to the built branch, type git push origin built&quot;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div>`,1),y=s("The final "),v=e("code",null,"pushRemote",-1),w=s(" command above is a trick based on "),E={href:"https://stackoverflow.com/questions/10260311/git-how-to-disable-push",target:"_blank",rel:"noopener noreferrer"},x=s("this stackoverflow thread"),A=s(". Any invalid repository will work here, but a long description is more useful when you "),N=e("code",null,"git push",-1),q=s(" and want to know what to do next."),M=e("h2",{id:"switching-directories",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#switching-directories","aria-hidden":"true"},"#"),s(" Switching directories")],-1),R=e("p",null,[s("If you do a lot of work on a command-line and frequently switch between repositories, you can end up spending a lot of time just typing "),e("code",null,"cd"),s(" commands.")],-1),O=e("code",null,"bash",-1),$=s(" provides a "),P={href:"https://www.oreilly.com/library/view/bash-cookbook/0596526784/ch16s05.html",target:"_blank",rel:"noopener noreferrer"},T=e("code",null,"CDPATH",-1),H=s(" variable"),S=s(" that can make this much easier. You might like to add this line to your "),B=e("code",null,"~/.bashrc",-1),D=s(":"),I=a(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token assign-left variable">CDPATH</span><span class="token operator">=</span><span class="token string">&quot;.:<span class="token environment constant">$HOME</span>/sleepdiary&quot;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>... then when you open a new terminal, <code>cd dashboard</code> will go to <code>$HOME/sleepdiary/dashboard</code> no matter where you previously <code>cd</code>ed to.</p>`,2);function V(Y,j){const n=r("ExternalLinkIcon");return i(),c(l,null,[u,e("p",null,[d,e("a",h,[m,o(n)]),b,e("a",g,[_,o(n)]),f]),k,e("p",null,[y,v,w,e("a",E,[x,o(n)]),A,N,q]),M,R,e("p",null,[O,$,e("a",P,[T,H,o(n)]),S,B,D]),I],64)}var U=t(p,[["render",V]]);export{U as default};
